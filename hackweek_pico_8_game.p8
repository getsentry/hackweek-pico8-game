pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- vim: sw=2 ts=2 et

x=64
y=127 - 8
c=127
clock=0

-- const
num_enemies = 8
row_height = 12
gap_width = 10
bg_color = 7

rows = {}
enemies = {}

function sign(x)
  -- can't use int division because of femto8
  return x / abs(x)
end

function _init()
  for i = 1,num_enemies do
    rows[i] = {}
    prev = 0
    for j = 1,rnd(3) + 1 do
      prev = rnd(128 - gap_width - prev)
      rows[i][j] = prev
    end

    enemies[i] = { x_pos = rnd(127 - gap_width), dir = 1 }
  end
end

function _update()
  if clock == 0 then
    clock = 1
  else
    clock = 0
  end

  if clock == 0 then
    for y,data in pairs(enemies) do
      data.x_pos += data.dir
      if data.x_pos < 0 or data.x_pos > 128 - 8 then
        data.dir *= -1
      end
    end
  end

  if btn(4) and btn(5) then
    y -= 1
  end

  if (btn(4)) then x-=1 end
  if (btn(5)) then x+=1 end

  -- edge collision
  x = mid(0, x, 127)
  y = mid(0, y, 127)
end

function _draw()
  rectfill(0,0,127,127,bg_color)
  for y,gaps in pairs(rows) do
    row_y = y * row_height + row_height
    rectfill(0,row_y,127,row_y + 1,100)
    for _,gap in pairs(gaps) do
      rectfill(gap,row_y,gap + gap_width,row_y + 1,bg_color)
    end
  end

  for y,data in pairs(enemies) do
    spr(2,data.x_pos, y * row_height + 4)
  end

  spr(1,x,y)
end
__gfx__
00000000000220007776677700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002002007775577700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000002007588885700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000022000207558855700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020200207788887700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002020027558855700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000200202027588885700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000222200227777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

